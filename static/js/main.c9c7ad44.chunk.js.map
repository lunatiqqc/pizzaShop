{"version":3,"sources":["pages/ThankYou.js","components/CheckMark.js","components/InViewAnimation.js","components/MakePizza.js","pages/About.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ThankYou","location","useLocation","console","log","state","pizza","Object","entries","map","entry","CC_20_SVG_path_length","props","isChecked","pathLength","useMotionValue","opacity","useTransform","style","display","flexDirection","xmlns","width","height","viewBox","motion","path","d","fill","strokeWidth","stroke","strokeLinecap","initial","animate","children","variants","controls","useAnimation","useInView","ref","inView","useEffect","start","div","transition","duration","visible","scale","hidden","forwardRef","makePizzaRef","useState","pizzaBase","setPizzaBase","pizzaToppings","setPizzaToppings","getTopping","topping","typeOfTopping","InViewAnimation","htmlFor","type","id","onClick","includes","prevState","index","indexOf","slice","handleSetPizzaToppings","pizzaBaseContainer","useRef","pizzaBaseContainerWidth","pizzaBaseContainerHeight","current","offsetWidth","scrollYProgress","scrollY","useViewportScroll","alignItems","backgroundImage","process","backgroundSize","filter","margin","action","AnimatePresence","fieldset","exit","textAlign","pizzaOptions","bases","base","undefined","overflow","padding","backgroundColor","color","fontFamily","e","preventDefault","flexWrap","justifyContent","toppings","to","pathname","fontSize","background","fontWeight","aboutRef","x","window","innerWidth","backgroundPosition","Home","yRange","innerHeight","nav","y","h1","letterSpacing","li","backgroundRepeat","ease","whileHover","onTap","offsetTop","onUpdate","v","scrollTo","delay","App","className","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9c7ad44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ThankYou() {\r\n    const location = useLocation();\r\n\r\n    console.log(location.state);\r\n\r\n    const pizza = location.state;\r\n    return (\r\n        <div>\r\n            <article>\r\n                <h1>Thank you for your order</h1>\r\n                <div>\r\n                    <h2>Order details</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            {Object.entries(pizza).map((entry) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <th>{entry[0]}</th>\r\n                                        <td>{entry[1]}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    );\r\n}\r\n","import { motion, useMotionValue, useTransform } from \"framer-motion\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function CC_20_SVG_path_length(props) {\r\n    const { isChecked } = props;\r\n\r\n    const pathLength = useMotionValue(0);\r\n    const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"\" }}>\r\n            <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                width='40'\r\n                height='40'\r\n                viewBox='0 0 150 150'\r\n            >\r\n                {isChecked ? (\r\n                    <motion.path\r\n                        d='M38 74.707l24.647 24.646L116.5 45.5'\r\n                        fill='transparent'\r\n                        strokeWidth='20'\r\n                        stroke='#39e'\r\n                        strokeLinecap='round'\r\n                        initial={{ pathLength: 0.0, opacity: 1 }}\r\n                        animate={{ pathLength: 1 }}\r\n                        style={{ pathLength: pathLength, opacity: opacity }}\r\n                    />\r\n                ) : null}\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n","import { motion, useAnimation } from \"framer-motion\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nexport default function ({ children, style, variants }) {\r\n    console.log(variants);\r\n    const controls = useAnimation();\r\n    const [ref, inView] = useInView();\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            controls.start(\"visible\");\r\n        }\r\n    }, [controls, inView]);\r\n\r\n    return (\r\n        <motion.div\r\n            style={style}\r\n            ref={ref}\r\n            animate={controls}\r\n            initial='hidden'\r\n            transition={{ duration: 0.3 }}\r\n            variants={\r\n                variants\r\n                    ? variants\r\n                    : {\r\n                          visible: { opacity: 1, scale: 1 },\r\n                          hidden: { opacity: 0, scale: 0 },\r\n                      }\r\n            }\r\n        >\r\n            {children}\r\n        </motion.div>\r\n    );\r\n}\r\n","import React, { forwardRef, useEffect, useRef, useState } from \"react\";\r\n\r\nimport pizzaOptions from \"../lib/pizzaOptions.json\";\r\n\r\nimport CheckMark from \"./CheckMark\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    AnimatePresence,\r\n    motion,\r\n    useElementScroll,\r\n    useViewportScroll,\r\n} from \"framer-motion\";\r\n\r\nimport InViewAnimation from \"./InViewAnimation\";\r\n\r\nexport default forwardRef(function MakePizza({ makePizzaRef }) {\r\n    const [pizzaBase, setPizzaBase] = useState();\r\n\r\n    const [pizzaToppings, setPizzaToppings] = useState([]);\r\n\r\n    const handleSetPizzaToppings = (topping) => {\r\n        if (pizzaToppings.includes(topping)) {\r\n            setPizzaToppings((prevState) => {\r\n                const index = prevState.indexOf(topping);\r\n                return [\r\n                    ...prevState.slice(0, index),\r\n\r\n                    ...prevState.slice(index + 1),\r\n                ];\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        setPizzaToppings((prevState) => {\r\n            return [...prevState, topping];\r\n        });\r\n    };\r\n\r\n    const getTopping = (topping, typeOfTopping) => {\r\n        return (\r\n            <div>\r\n                <div key={topping}>\r\n                    <InViewAnimation style={{ width: \"100%\" }}>\r\n                        <label\r\n                            htmlFor={topping}\r\n                            style={{ width: \"100%\", height: \"100%\" }}\r\n                        >\r\n                            {topping}\r\n                            <input\r\n                                type='checkbox'\r\n                                id={topping}\r\n                                style={{ display: \"none\" }}\r\n                                onClick={() => {\r\n                                    console.log(\"click\");\r\n                                    handleSetPizzaToppings(topping);\r\n                                }}\r\n                            />\r\n                            <CheckMark\r\n                                isChecked={pizzaToppings.includes(topping)}\r\n                                //handleSetChecked={handleSetChecked}\r\n                            />\r\n                        </label>\r\n                    </InViewAnimation>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const pizzaBaseContainer = useRef();\r\n\r\n    const pizzaBaseContainerWidth = useRef();\r\n    const pizzaBaseContainerHeight = useRef();\r\n\r\n    useEffect(() => {\r\n        pizzaBaseContainerHeight.current =\r\n            pizzaBaseContainer.current.offsetWidth;\r\n        pizzaBaseContainerWidth.current =\r\n            pizzaBaseContainer.current.offsetWidth;\r\n\r\n        console.log(scrollYProgress);\r\n    }, []);\r\n\r\n    const scrollY = useRef();\r\n    const { scrollYProgress } = useViewportScroll();\r\n    return (\r\n        <div ref={scrollY}>\r\n            <article\r\n                ref={makePizzaRef}\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    backgroundImage: `url(${process.env.PUBLIC_URL}/images/paper.jpg)`,\r\n                    backgroundSize: \"contain\",\r\n                    filter: \"brightness(0.8)\",\r\n                }}\r\n            >\r\n                <h1 style={{ margin: \"5vh 0\" }}>Make a pizza</h1>\r\n                <form action=''>\r\n                    <AnimatePresence>\r\n                        <motion.fieldset\r\n                            ref={pizzaBaseContainer}\r\n                            key={\"base\"}\r\n                            //initial={{ scale: 0 }}\r\n                            //animate={{ scale: 1 }}\r\n                            exit={{ scale: 0, height: 0 }}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                textAlign: \"center\",\r\n                                width: pizzaBaseContainerWidth.current + 0.5,\r\n                                height: pizzaBaseContainerHeight + 0.5,\r\n                            }}\r\n                        >\r\n                            <legend>Choose pizzabase</legend>\r\n                            <AnimatePresence>\r\n                                {pizzaOptions.bases.map((base) => {\r\n                                    if (\r\n                                        pizzaBase === base ||\r\n                                        pizzaBase === undefined\r\n                                    ) {\r\n                                        return (\r\n                                            <motion.div\r\n                                                exit={{ height: 0 }}\r\n                                                initial={{ height: 0 }}\r\n                                                animate={{ height: \"auto\" }}\r\n                                                key={base}\r\n                                                style={{\r\n                                                    overflow: \"hidden\",\r\n                                                    width: \"\",\r\n                                                }}\r\n                                            >\r\n                                                <div>\r\n                                                    <InViewAnimation\r\n                                                        style={{\r\n                                                            width: \"100%\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <label htmlFor={base}>\r\n                                                            {base}\r\n                                                            <input\r\n                                                                type='radio'\r\n                                                                id={base}\r\n                                                                style={{\r\n                                                                    display:\r\n                                                                        \"none\",\r\n                                                                }}\r\n                                                                onClick={() => {\r\n                                                                    setPizzaBase(\r\n                                                                        base\r\n                                                                    );\r\n                                                                }}\r\n                                                            />\r\n                                                            <CheckMark\r\n                                                                isChecked={\r\n                                                                    pizzaBase ===\r\n                                                                    base\r\n                                                                }\r\n                                                            />\r\n                                                        </label>\r\n                                                    </InViewAnimation>\r\n                                                </div>\r\n                                                {pizzaBase === base ? (\r\n                                                    <button\r\n                                                        style={{\r\n                                                            padding: \"5%\",\r\n                                                            backgroundColor:\r\n                                                                \"#441813\",\r\n                                                            color: \"white\",\r\n                                                            fontFamily:\r\n                                                                \"inherit\",\r\n                                                        }}\r\n                                                        type='button'\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault();\r\n                                                            setPizzaBase();\r\n                                                        }}\r\n                                                    >\r\n                                                        Undo\r\n                                                    </button>\r\n                                                ) : null}\r\n                                            </motion.div>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                            </AnimatePresence>\r\n                        </motion.fieldset>\r\n                    </AnimatePresence>\r\n\r\n                    {true ? (\r\n                        <motion.fieldset\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexWrap: \"wrap\",\r\n                                flexDirection: \"row\",\r\n                                textAlign: \"center\",\r\n                                justifyContent: \"space-evenly\",\r\n                            }}\r\n                        >\r\n                            <legend>Choose pizzatopping</legend>\r\n                            {Object.entries(pizzaOptions.toppings).map(\r\n                                (entry) => {\r\n                                    return (\r\n                                        <fieldset key={entry[0]}>\r\n                                            <legend>{entry[0]}</legend>\r\n\r\n                                            {entry[1].map((topping) => {\r\n                                                return getTopping(\r\n                                                    topping,\r\n                                                    entry[0]\r\n                                                );\r\n                                            })}\r\n                                        </fieldset>\r\n                                    );\r\n                                }\r\n                            )}\r\n                        </motion.fieldset>\r\n                    ) : null}\r\n\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/thank-you\",\r\n                            state: {},\r\n                        }}\r\n                    >\r\n                        <button\r\n                            style={{\r\n                                padding: \"10%\",\r\n                                fontFamily: \"inherit\",\r\n                                fontSize: \"1rem\",\r\n                                margin: \"3vh 0\",\r\n                                background: \"rgb(86 36 21)\",\r\n                                color: \"white\",\r\n                                fontWeight: \"bold\",\r\n                            }}\r\n                            type='button'\r\n                        >\r\n                            Order pizza\r\n                        </button>\r\n                    </Link>\r\n                </form>\r\n            </article>\r\n        </div>\r\n    );\r\n});\r\n","import { motion } from \"framer-motion\";\r\nimport React, { forwardRef } from \"react\";\r\nimport InViewAnimation from \"../components/InViewAnimation\";\r\n\r\nexport default forwardRef(function About({ aboutRef }) {\r\n    const variants = {\r\n        hidden: {\r\n            x: (window.innerWidth / 1.3) * -1,\r\n        },\r\n        visible: {\r\n            x: 0,\r\n        },\r\n    };\r\n    return (\r\n        <div ref={aboutRef}>\r\n            <article style={{ color: \"white\", textAlign: \"center\" }}>\r\n                <h1>About us</h1>\r\n                <InViewAnimation variants={variants}>\r\n                    <motion.div\r\n                        style={{\r\n                            background: `url(${process.env.PUBLIC_URL}/images/about.jpg)`,\r\n                            backgroundSize: \"cover\",\r\n                        }}\r\n                    >\r\n                        <div style={{ background: \"rgba(0,0,0,0.5)\" }}>\r\n                            <h2>Values</h2>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet consectetur\r\n                                adipisicing elit. Eius quisquam iure perferendis\r\n                                aut ut. <br />\r\n                                At ullam harum, optio quos corporis enim\r\n                                delectus magni, tempora perspiciatis asperiores\r\n                                sequi cum. <br />\r\n                                Eius dolores debitis esse atque, animi nihil\r\n                                ipsam a quis sunt aut ullam. Eligendi. <br />\r\n                            </p>\r\n                        </div>\r\n                    </motion.div>\r\n                </InViewAnimation>\r\n                <InViewAnimation variants={variants}>\r\n                    <motion.div\r\n                        style={{\r\n                            background: `url(${process.env.PUBLIC_URL}/images/ingredients.jpg)`,\r\n                            backgroundPosition: \"center\",\r\n                            margin: \"10vh 0\",\r\n                        }}\r\n                    >\r\n                        <div style={{ background: \"rgba(0,0,0,.7)\" }}>\r\n                            <h3>Ingredients</h3>\r\n                            <p>\r\n                                Asperiores architecto at beatae, perspiciatis ad\r\n                                quia, totam est, harum ipsa id velit libero.\r\n                                Dolorem natus incidunt commodi soluta ipsam odit\r\n                                iste, cumque aut quam, similique quod. Non!{\" \"}\r\n                                <br />\r\n                                Autem, vero corporis odio sint sequi iste,\r\n                                molestiae perspiciatis quis cum aspernatur hic?\r\n                                <br />\r\n                                Recusandae ipsum odit, impedit maiores, quos,\r\n                                quibusdam modi mollitia accusamus sit adipisci\r\n                                cum corrupti. <br />\r\n                            </p>\r\n                        </div>\r\n                    </motion.div>\r\n                </InViewAnimation>\r\n            </article>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useEffect, useLayoutEffect, useRef } from \"react\";\r\n\r\nimport {\r\n    animate,\r\n    motion,\r\n    useElementScroll,\r\n    useSpring,\r\n    useTransform,\r\n    useViewportScroll,\r\n} from \"framer-motion\";\r\n\r\nimport MakePizza from \"../components/MakePizza\";\r\nimport About from \"./About\";\r\n\r\nexport default function Home() {\r\n    const { scrollYProgress } = useViewportScroll();\r\n\r\n    const yRange = useTransform(\r\n        scrollYProgress,\r\n        [0, 1],\r\n        [0, window.innerHeight]\r\n    );\r\n\r\n    const makePizzaRef = useRef();\r\n\r\n    const aboutRef = useRef();\r\n\r\n    const { scrollY } = useViewportScroll();\r\n\r\n    useEffect(() => {}, []);\r\n\r\n    return (\r\n        <div style={{ backgroundColor: \"black\" }}>\r\n            <motion.nav\r\n                style={{\r\n                    backgroundImage: `url(${process.env.PUBLIC_URL}/images/banner.jpg)`,\r\n                    height: \"41vw\",\r\n                    backgroundSize: \"cover\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    filter: \"\",\r\n                    y: yRange,\r\n                }}\r\n            >\r\n                <motion.div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        color: \"white\",\r\n                        height: \"100%\",\r\n                        justifyContent: \"space-evenly\",\r\n                    }}\r\n                >\r\n                    <motion.h1 style={{ letterSpacing: \"0.3rem\" }}>\r\n                        Pizza shop\r\n                    </motion.h1>\r\n                    <ul>\r\n                        <motion.li\r\n                            initial={{ x: window.innerWidth * -1 }}\r\n                            animate={{ x: 0 }}\r\n                            style={{\r\n                                margin: \"2vh 0\",\r\n                                backgroundImage: \"linear-gradient(#fff, #fff)\",\r\n                                backgroundPosition: \"0 100% \",\r\n                                backgroundSize: \"0% 2px\",\r\n                                backgroundRepeat: \"no-repeat\",\r\n                            }}\r\n                            transition={{ ease: \"easeInOut\" }}\r\n                            whileHover={{\r\n                                backgroundSize: \"100% 2px\",\r\n                            }}\r\n                            onTap={() => {\r\n                                console.log(makePizzaRef);\r\n\r\n                                //window.scrollTo({\r\n                                //    top: 100,\r\n                                //    left: 100,\r\n                                //    behavior: \"smooth\",\r\n                                //});\r\n                                console.log(\"tapped\");\r\n                                animate(0, makePizzaRef.current.offsetTop, {\r\n                                    duration: 1,\r\n                                    onUpdate: (v) => {\r\n                                        window.scrollTo(0, v);\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            Make a pizza\r\n                        </motion.li>\r\n                        <motion.li\r\n                            initial={{ x: window.innerWidth * -1 }}\r\n                            animate={{ x: 0 }}\r\n                            transition={{ delay: 0.1, ease: \"easeInOut\" }}\r\n                            style={{\r\n                                margin: \"2vh 0\",\r\n                                backgroundImage: \"linear-gradient(#fff, #fff)\",\r\n                                backgroundPosition: \"0 100% \",\r\n                                backgroundSize: \"0% 2px\",\r\n                                backgroundRepeat: \"no-repeat\",\r\n                            }}\r\n                            transition={{ ease: \"easeInOut\", delay: 0.1 }}\r\n                            whileHover={{\r\n                                backgroundSize: \"100% 2px\",\r\n                            }}\r\n                            onTap={() => {\r\n                                console.log(makePizzaRef);\r\n\r\n                                //window.scrollTo({\r\n                                //    top: 100,\r\n                                //    left: 100,\r\n                                //    behavior: \"smooth\",\r\n                                //});\r\n                                console.log(\"tapped\");\r\n                                animate(0, aboutRef.current.offsetTop, {\r\n                                    duration: 1,\r\n                                    onUpdate: (v) => {\r\n                                        window.scrollTo(0, v);\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            About us\r\n                        </motion.li>\r\n                    </ul>\r\n                </motion.div>\r\n\r\n                {/* <figure>\r\n                    <img\r\n                        style={{ width: \"100%\", height: \"\" }}\r\n                        src='/images/banner.jpg'\r\n                        alt='pizzashop banner'\r\n                    />\r\n                </figure> */}\r\n            </motion.nav>\r\n            <MakePizza makePizzaRef={makePizzaRef} />\r\n            <About aboutRef={aboutRef} />\r\n        </div>\r\n    );\r\n}\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ThankYou from \"./pages/ThankYou\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n    console.log(process.env.PUBLIC_URL);\n    return (\n        <div className='App'>\n            <Router>\n                <Route\n                    exact\n                    path={`${process.env.PUBLIC_URL}`}\n                    component={Home}\n                />\n                <Route\n                    exact\n                    path={`${process.env.PUBLIC_URL}/thank-you`}\n                    component={ThankYou}\n                />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}